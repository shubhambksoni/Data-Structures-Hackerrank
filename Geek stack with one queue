// This could be improved by looping only size-1 times in queue thus array not used and enqueue each time;


public class StackofQueue {
	private Queue<Integer> queue=new Queue<>();
	
	public boolean isEmpty(){
		return queue.isEmpty();
	}
	public void push(int x){
		queue.enqueue(x);
	}
	public int pop(){
		if(!queue.isEmpty()){
			int i=popHelper();
			return i;
		}else{
			return Integer.MIN_VALUE;
		}
	}
	private int popHelper(){
		int[] arr=new int[queue.size()];
		int rem;
		for(int i=0;i<arr.length;i++){
			arr[i]=queue.dequeue();
		}
		for(int i=0;i<arr.length-1;i++){
			queue.enqueue(arr[i]);
		}
		return arr[arr.length-1];
	}
}
